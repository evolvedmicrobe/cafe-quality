//
//  MatrixTester.cpp
//  ConsensusCoreXCode
//
//  Created by Nigel Delaney on 3/7/15.
//  Copyright (c) 2015 Pacific Biosciences. All rights reserved.
//

#include "MatrixTester.hpp"
#include <fstream>
#include <iostream>
#include <string>
#include <memory>
#include "MultiReadMutationScorer.hpp"
#include "Read.hpp"
#include "TemplateParameterPair.hpp"


#define ASSERT(o, e) \
{ \
    auto dif = fabs(1- o /e); \
    std::cout << dif <<std::endl; \
    if (!(fabs(1 - o/e) < 1e-5)) \
        std::cerr << "failed assert at " __FILE__ ":" << __LINE__ << "! o = " << o << ", e = " << e << std::endl; \
    else \
        std::cerr << "passed test at " __FILE__ ":" << __LINE__ << std::endl; \
}


namespace ConsensusCore {



//    void assert(double o, double e) {
//        double dif = fabs(1- o/e);
//        if (!(dif < 1e-5))
//            std::cerr << "failed assert at " __FILE__ ":" << __LINE__ << "! o = " << o << ", e = " << e << std::endl; \
//        else
//            std::cerr << "passed test at " __FILE__ ":" << __LINE__ << std::endl;
//    }



    typedef SparseSimpleQvSumProductMultiReadMutationScorer ScorerType;
    typedef typename ScorerType::RecursorType RecursorType;

    ScorerType createScorer(std::string tpl, SNR snr) {
        ContextParameters ctx_params(snr);
        BandingOptions bo = BandingOptions(12.5);
        QuiverConfig qc(ctx_params, bo);
        return ScorerType(qc, tpl);
    }

    void AddReadToScorer(std::string read, ScorerType& scorer) {
        Read r("null", read);
        MappedRead mr(r, FORWARD_STRAND, 0, (int)scorer.Template().tpl.length());
        scorer.AddRead(mr);
    }

    int  MatrixTester::TestMutationScorer()
    {
        std::string temp = "AGAGAGATGGCACCGCTTTTACAGTACCCATTATTTTCATGATGTTCTGCTGGATATGCACTTTTCCGGGCTGACGTACACCGTGCTCAGCCTGTTTTTCAGCGATCCGGATATGCATCCGCTGGATTTCAGTCTGCTGAACCGGCGCGAGGCTGACGAAGAGCCTGAAGATGATGTGCTGATGCAGAAAGCGGCAGGGCTTGCCGGAGGTGTCCGCTTTGGCCCGGACGGGAATGAAGTTATCCCCGCTTCCCCGGATGTGGCGGACATGACGGAGGATGACGTAATGCTGATGACAGTATCAGAAGGGATCGCAGGAGGAGTCCGGTATGGCTGAACCGGTAGGCGATCTGGTCGTTGATTTGAGTCTGGATGCGGCCAGATTTGACGAGCAGATGGCCAGAGTCAGGCGTCATTTTTCTGGTACGGAAAGTGATGCGAAAAAAACAGCGGCAGTCGTTGAACAGTCGCTGAGCCGACAGGCGCTGGCTGCACAGAAAGCGGGGATTTCCGTCGGGCAGTATAAAGCCGCCATGCGTATGCTGCCTGCACAGTTCACCGACGTGGCCACGCAGCTTGCAGGCGGGCAAAGTCCGTGGCTGATCCTGCTGCAACAGGGGGGGCAGGTGAAGGACTCCTTCGGCGGGATGATCCCCATGTTCAGGGGGCTTGCCGGTGCGATCACCCTGCCGATGGTGGGGGCCACCTCGCTGGCGGTGGCGACCGGTGCGCTGGCGTATGCCTGGTATCAGGGCAACTCAACCCTGTCCGATTTCAACAAAACGCTGGTCCTTTCCGGCAATCAGGCGGGACTGACGGCAGATCGTATGCTGGTCCTGTCCAGAGCCGGGCAGGCGGCAGGGCTGACGTTTAACCAGACCAGCGAGTCACTCAGCGCACTGGTTAAGGCGGGGTAAGCGGTGAGGCTCAGATTGCGTCCATCAGCCAGAGTGTGGCGCGTTTCTCCTCTGCATCCGGCGTGGATCTCTCT";
        SNR snro(15.6728963851929,7.36624431610107,6.76308250427246,7.17328977584839);
        ContextParameters ctx_params(snro);
        BandingOptions bo = BandingOptions(50);
        QuiverConfig qc(ctx_params, bo, 12.0);
        ScorerType funny(qc, temp);
        std::vector<unsigned char> iqvs = {5,3,8,7,1,2,7,10,20,5,8,3,6,4,4,13,6,20,10,10,12,9,6,6,2,14,4,4,3,3,3,10,2,8,4,14,19,4,10,20,4,2,12,8,15,5,3,9,13,4,9,1,5,7,4,7,5,20,7,20,13,1,7,6,1,6,11,9,20,15,7,1,6,7,1,3,20,10,6,4,9,1,7,20,8,20,5,3,4,7,15,3,5,4,8,3,7,6,1,1,8,11,5,9,13,4,16,6,20,1,20,10,8,2,8,6,12,4,7,17,12,10,12,4,3,12,6,20,6,5,9,6,8,7,8,10,7,3,8,17,16,1,13,5,4,10,4,4,11,6,3,7,5,20,12,7,17,4,14,5,7,5,13,1,6,5,5,11,3,8,9,9,10,2,4,1,16,11,4,3,1,4,7,9,6,6,3,3,4,4,5,9,7,20,8,3,20,6,5,2,3,1,16,5,2,3,12,6,10,7,9,16,4,7,5,18,12,10,7,7,7,2,18,1,8,20,11,4,20,7,9,4,5,10,4,3,4,4,20,8,4,20,2,9,8,18,5,15,6,2,20,3,11,6,4,6,1,4,5,18,8,20,5,12,3,15,20,7,9,20,6,15,4,14,11,3,20,12,20,18,5,20,15,4,8,14,1,20,6,20,7,7,20,10,4,9,11,5,9,4,4,5,20,3,3,11,7,6,3,5,15,5,20,6,3,2,4,9,1,6,20,4,4,6,18,1,4,18,20,15,5,8,18,11,4,20,19,6,2,8,7,3,3,4,7,7,1,6,20,3,2,12,1,11,12,7,5,13,5,9,14,7,7,6,16,1,14,3,9,1,11,6,9,20,6,6,9,4,9,18,20,8,7,4,18,5,11,20,11,10,6,1,3,15,5,8,9,8,17,7,4,1,7,13,5,3,4,3,20,3,5,5,6,3,6,3,8,18,12,15,5,4,3,14,9,4,4,18,4,1,5,15,3,4,4,2,4,17,8,13,3,1,5,6,4,8,3,4,3,8,3,5,9,6,7,3,5,13,7,12,5,13,5,4,6,5,2,5,10,13,9,9,9,3,4,2,7,1,12,3,4,20,5,4,1,8,5,5,2,3,20,17,16,4,2,2,6,10,4,6,8,6,4,8,2,20,9,3,17,20,4,5,12,14,10,6,8,5,7,20,6,20,2,20,5,3,18,18,5,6,6,3,7,12,9,20,17,20,1,20,3,9,8,8,6,9,6,15,6,20,14,20,4,4,20,17,2,3,2,4,4,18,12,9,17,10,1,4,4,5,6,6,4,16,1,9,6,16,4,2,5,7,8,14,7,20,3,15,10,4,4,6,2,20,20,20,6,4,14,4,4,3,3,4,3,10,12,3,3,4,14,20,4,15,7,15,20,13,6,3,9,20,3,3,6,6,20,20,7,10,20,20,20,2,3,3,2,2,6,4,2,20,9,8,4,3,8,20,6,20,20,4,4,20,4,4,6,4,15,8,17,13,4,12,1,3,4,7,5,9,7,8,2,4,20,2,6,5,13,5,5,16,3,9,3,7,7,5,14,5,12,4,2,5,15,4,6,20,9,1,11,5,13,8,15,3,1,1,3,6,4,12,4,2,7,20,7,17,20,3,7,1,4,3,11,3,9,13,20,8,13,4,6,2,13,9,4,1,6,3,4,10,4,5,8,18,6,3,7,11,10,3,4,3,4,14,15,5,11,9,9,7,5,20,8,3,7,11,20,5,3,11,6,9,5,2,12,13,12,5,20,14,14,3,20,20,10,8,7,20,7,5,15,6,12,12,3,3,12,4,20,17,5,20,6,15,12,5,1,4,12,10,8,11,18,4,5,18,9,10,1,1,20,4,4,14,5,1,8,7,20,3,16,3,1,8,11,6,5,4,3,3,5,2,11,5,13,1,7,2,5,20,9,8,5,6,10,7,4,20,18,5,6,12,19,2,6,8,6,9,9,3,5,8,20,11,3,7,8,3,13,1,20,3,6,1,20,20,9,4,20,2,3,8,13,4,5,16,18,9,10,9,5,20,3,1,5,1,3,3,6,4,16,7,4,4,14,3,10,2,6,9,6,11,20,3,6,2,13,3,3,5,3,10,4,5,20,4,9,4,6,12,4,5,4,10,4,5,11,4,3,10,8,9,6,2,6,6,16,8,7,3,20,7,3,4,6,7,20,5,4,2,5,3,1,5,16,10,7,11,1,3,2,7,6,3,4,5,2,14,2,8,12,3,4,5,4,1,5,4,4,20,7,20,3,7,3,3,6,5,5,2,6,1,2,7,1,9,20,4,3,1,6,10,18,17,6,6,6,9,5};
        
        Read r1o("m141115_075238_ethan_c100699872550000001823139203261572_s1_p0/2517/43864_44895 RQ=0.872","AGAGCAGATCCAACGCCGGAGCAGAGGAGTAAACGCGCCACACTCTGGCTGAAATGGACGCAATCTGAGCCTCACCGCTTTTACCCCCCTTAACCAGTGCGTGAGTGACTCGTGGTCTGGTTAAAACGTCAGCCCTGCCGCCTGCCCCGGTCTGGACAGACCAGATACGATCTGCCGTCAGTCCCGCCTGATTGCCGGAAAGGACCAGCGTTTTGTTGAAAAATCGGACAGGGTTGAGTTGCCCCTGATACCAGGCATACGCCAGCGCACCGGTCGCCACCGCCAGCGAGGTGGCCCCCACCATCGGCAGGGTGATCGCACCGGCCAAGCCCCCCTGAACATGGGATCATGCCGCCGAAGGAGTCCTTCACCTGCCCCCCGTTGCAGCAGGCATCAGCCACGGACTTTTGCCCGCCTGTCGAAGCTGCGTGGCCACGTCGGTGAACTGTGCAGGGCAGCATACGCATGGCGCTTTAATACTGCCCGACCGGAAATCCCCGCTGTTCTGGTGCAGCCAGCGCCTTGTCGGCTCAGCGACTGTTAACGACTGCGCTGTTTTTTTTCGCAATCACTTTCCGTAACCAGAAAATGGACGCCTGACTCTTGCCATCTGCTCGTAAATCTGGCGCATCCAGAACCTACAAATCACGACCAGATCGCCTACTCGGTTCAAGCCATACCGGCTCCTCCCTGCGACCCTTCCTGATTACTGCAAATCAGCAATTACGTCATCGCTCTCGTCATGCGCCACTATCCGGGGAAGCGGGGATAACTCAATTCCGTCGGGCCAACGCGGAACACCACCTCCGGCAAGCCCCTGGGGCCGCTTTCTGCACTCAGCACATCATCTTCAAGGCTCTCGTCAGCCCGCGCCGGTTCAAGCAGAACTTGAAACAGCGGATGCATTAATCCGGAAATCGCGCTGAAAAAACAAGGCTGAGCAACGGTGTCCGTCAGCCCGGAAAATGCATATCCCCAGCAAGAACATCATGAAAATAATGGGTAACTGTAAATAAGCGGTGCCATCTCTC", iqvs);
        MappedRead mr1o(r1o, StrandEnum::REVERSE_STRAND, 0, 991, true, true );
        auto result1 = funny.AddRead(mr1o, 1.0);
        auto baseo = funny.BaselineScore();
        std::cout<<baseo<<"\n";
          /*
        std::string temp = "AGAGAGATAAGCTACTAGTCCTCAGCAAGCTTGTGCGTCGCTCAAAAAGCTGCGCTCGAAAAAAAAAAGTCGTCTGTCTAGATGATGTGCCCCCCCCCGTATATGTATCCCCCAGTGTATGAGCATTCTAGAGGATCCCCGGATCTCTCT";
        SNR snro(12.797290802002,6.59999513626099,12.5511474609375,13.9942417144775);
        
        ContextParameters ctx_params(snro);
        BandingOptions bo = BandingOptions(12.5);
        
        QuiverConfig qc(ctx_params, bo, 12.0);
        ScorerType funny(qc, temp);
        std::vector<unsigned char> iqvs = {16,13,14,16,8,17,9,17,16,17,16,15,17,16,17,17,17,8,17,17,2,18,16,9,17,3,15,17,18,15,14,17,17,14,17,16,17,18,17,17,18,12,12,13,9,17,18,17,12,18,5,17,16,16,16,16,16,11,12,7,10,12,12,12,12,9,18,17,17,18,17,17,17,17,16,15,14,15,14,18,17,17,17,15,18,17,17,16,8,9,10,6,7,5,5,5,9,15,16,17,17,11,17,18,17,16,17,17,8,3,4,15,17,17,18,17,18,17,18,17,16,16,18,4,16,14,17,10,15,16,16,16,16,16,18,13,9,9,9,17,16,17,7,16,15,17,15};
        
        Read r1("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/2289/11962_12109 RQ=0.872","AGAGAGAAGCTACTAGTCCTGCAGCAAGCTTGTGCGTCGTCAAAAAGCTGACGCTCGAAAAAAAAAAGTCGTCTGTCTAGATGATGTGCCCCCCCCCCGTATATGTATCCCCAGTGTATGAGCAATTCTAGAGGATCCCCGGTCTTC", iqvs);
        MappedRead mr1(r1, StrandEnum::FORWARD_STRAND, 0, 150, true, true );
        auto result1 = funny.AddRead(mr1, 1.0);
        auto base = funny.BaselineScore();
        Mutation mLLL(MutationType::DELETION, 37, '-');
        auto scoregg = funny.Score(mLLL);
        
        
        
        
        std::string temp = "AGAGAGATAAGCTACTAGTCCTCAGCAAGCTTGTGCGTCGCTCAAAAAGCTGCGCTCGAAAAAAAAAAGTCGTCTGTCTAGATGATGTGCCCCCCCCCGTATATGTATCCCCCAGTGTATGAGCATTCTAGAGGATCCCCGGATCTCTCT";
        SNR snro(12.797290802002,6.59999513626099,12.5511474609375,13.9942417144775);
        
        ContextParameters ctx_params(snro);
        BandingOptions bo = BandingOptions(12.5);
        
        QuiverConfig qc(ctx_params, bo, 12.0);
        ScorerType funny(qc, temp);
        std::vector<unsigned char> iqvs = {16,13,14,16,8,17,9,17,16,17,16,15,17,16,17,17,17,8,17,17,2,18,16,9,17,3,15,17,18,15,14,17,17,14,17,16,17,18,17,17,18,12,12,13,9,17,18,17,12,18,5,17,16,16,16,16,16,11,12,7,10,12,12,12,12,9,18,17,17,18,17,17,17,17,16,15,14,15,14,18,17,17,17,15,18,17,17,16,8,9,10,6,7,5,5,5,9,15,16,17,17,11,17,18,17,16,17,17,8,3,4,15,17,17,18,17,18,17,18,17,16,16,18,4,16,14,17,10,15,16,16,16,16,16,18,13,9,9,9,17,16,17,7,16,15,17,15};

        Read r1("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/2289/11962_12109 RQ=0.872","AGAGAGAAGCTACTAGTCCTGCAGCAAGCTTGTGCGTCGTCAAAAAGCTGACGCTCGAAAAAAAAAAGTCGTCTGTCTAGATGATGTGCCCCCCCCCCGTATATGTATCCCCAGTGTATGAGCAATTCTAGAGGATCCCCGGTCTTC", iqvs);
            MappedRead mr1(r1, StrandEnum::FORWARD_STRAND, 0, 150, true, true );
            auto result1 = funny.AddRead(mr1, 1.0);
        auto base = funny.BaselineScore();
            Mutation mLLL(MutationType::DELETION, 37, '-');
            auto scoregg = funny.Score(mLLL);
        
        
        */
        
        
        // A series of tests, all the correct values are derived from the C# code.
        SNR snr(10.0, 7.0, 5.0, 11.0);

        TransitionParameters tp = ContextParameterProvider::GetTransitionParameters("CC", snr);
        // Now look at a small test case
        std::string tpl = "ACGTCGT";
        // Create a mutation scorer to test values
        auto t = createScorer(tpl, snr);
        AddReadToScorer("ACGTACGT", t);

        double score = t.BaselineScore();
        //t.DumpAlpha();
        double t_baseline = -4.94222030733063;
        ASSERT(score, t_baseline); //-4.99600615471328


        //Test a giant version
        std::string longTPL = "GGGCGGCGACCTCGCGGGTTTTCGCTATTTATGAAAATTTTCCGGTTTAAGGCGTTTCCGTTCTTCTTCGTCATAACTTAATGTTTTTATTTAAAATACCCTCTGAAAAGAAAGGAAACGACAGGTGCTGAAAGCGAGCTTTTTGGCCTCTGTCGTTTCCTTTCTCTGTTTTTGTCCGTGGAATGAACAATGGAAGTCAACAAAAAGCAGCTGGCTGACATTTTCGGTGCGAGTATCCGTACCATTCAGAACTGGCAGGAACAGGGAATGCCCGTTCTGCGAGGCGGTGGCAAGGGTAATGAGGTGCTTTATGACTCTGCCGCCGTCATAAAATGGTATGCCGAAAGGGATGCTGAAATTGAGAACGAAAAGCTGCGCCGGGAGGTTGAAGAACTGCGGCAGGCCAGCGAGGCAGATCTCCAGCCAGGAACTATTGAGTACGAACGCCATCGACTTACGCGTGCGCAGGCCGACGCACAGGAACTGAAGAATGCCAGAGACTCCGCTGAAGTGGTGGAAACCGCATTCTGTACTTTCGTGCTGTCGCGGATCGCAGGTGAAATTGCCAGTATTCTCGACGGGCTCCCCCTGTCGGTGCAGCGGCGTTTTCCGGAACTGGAAAACCGACATGTTGATTTCCTGAAACGGGATATCATCAAAGCCATGAACAAAGCAGCCGCGCTGGATGAACTGATACCGGGGTTGCTGAGTGAATATATCGAACAGTCAGGTTAACAGGCTGCGGCATTTTGTCCGCGCCGGGCTTCGCTCACTGTTCAGGCCGGAGCCACAGACCGCCGTTGAATGGGCGGATGCTAATTACTATCTCCCGAAAGAATC";

        ScorerType scorer = createScorer(longTPL, snr);

        std::string long_read = "GGGCGGCGACCTCGCGGGTTTTCGCTATTTCTGAAAATTTTCCGGTTTAAGGCGTTTCCGTTCTTCTTCGTCATAACTTAATGTTTTTATTTAAAATACCCTCTGAAAAGAAAGGAAACGACAGGTGCTGAAAGCGAGCTTTTTGGCCTCTGTCGTTTCCTTTCTCTGTTTTTGTCCGTGGAATGAACAATGGAAGTCAACAAAAAGCAGCTGGCTGACATTTTCGGTGGAGTATCCGTACCATTCAGAACTGGCAGGACAGGGAATGCCCGTTCTGCGAGGCGGTGGCAAGGGTAATGAGGTGCTTTATGACTCTGCCGCCGTCATAAAATGGTATGCCGAAAGGGATGCTGAAATTGAGAACGAATAGCTGCGCCGGGAGGTTGAAGAACTGCGGCAGGCCAGCGAGGCAGATCTCCAGCCAGGAACTATTGAGTACGAACGCCATCGACTTACGCGTGCGCAGGCCGACGCACAGGAACTGAAGAATGCCAGAGACTCCGCTGAAGTGGTGGAAACCGCATTCCCCTGTACTTTCGTGCTGTCGCGGATCGCAGGTGAAATTGCCAGTATTCTCGACGGGCTCCCCCTGTCGGTGCAGCGGCGTTTTCCGGAACTGGAAAACCGACATGTTGATTTCCTGAAACGGGATATCATCAAAGCCATGAACAAAGCAGCCGCGCTGGATGAACTGATACCGGGGTTGCTGAGTGAATATATCGAACAGTCAGGTTAACAGGCTGCGGCATTTTGTCCGCGCCGGGCTTCGCTCACTGTTCAGGCCGGAGCCACAGACCGCCGTTGAACGGATGCTAATTACTATCTCCCGAAAGAATC";
        AddReadToScorer(long_read, scorer);

        score = scorer.BaselineScore();
        ASSERT(score, -131.73248120890264); // This one was not verified in C#

        // Now let's check deletion times
        int i=0;
        for(; i< 20000;i++) {
            Mutation mL(MutationType::DELETION, 755, '-');
            score = scorer.Score(mL);
            ASSERT(score, -4.039538);
        }

        // Check the CC Context
        ScorerType t2 = createScorer(tpl, snr);
        AddReadToScorer("ACCTCGT", t2);
        double score2 = t2.BaselineScore();
        ASSERT(score2, -6.17329812914413);


        i=0;
        for(;i<1;i++) {
        // Test an insertion mutation
        Mutation m(MutationType::INSERTION, 4, 'A');
        auto new_score = t.Score(m);
        ASSERT(new_score, (-0.584415070238446 - t_baseline));


        // Now get the same value by mutating the original template
        Mutation m2(MutationType::SUBSTITUTION, 2, 'C');
        auto new_score2 = t.Score(m2);
        ASSERT(new_score2, (-10.4362503093273 - t_baseline));

        // Test deletion near the end (goes through link/alpha beta path).
        Mutation m3(MutationType::DELETION, 4,'-');
        auto score3 = t.Score(m3);
        ASSERT(score3, (-9.89216068954291 - t_baseline));

        // Test a deletion of the very last base.
        Mutation m4(MutationType::DELETION, 6, '-');
        auto score4 = t.Score(m4);
        ASSERT(score4, (-15.6788158527151 - t_baseline));

        // Test an insertion at the very last base
        // This is very poorly defined behavior so I am ditching this.
        //Mutation m5(MutationType::INSERTION, 7, 'T');
        //auto score5 = t.Score(m5);
        //ASSERT(score5, -8.99810225167093 - t_baseline);

        // Test a deletion of the first base
        Mutation m6(MutationType::DELETION, 0, '-');
        auto score6 = t.Score(m6);
        ASSERT(score6, (-16.6208180854335 - t_baseline));

        //return 0;
       // Test an insertion at the first base
        // Again bad vehavior wiht ends pinned, so going to tich this
        //Mutation m7(MutationType::INSERTION, 0, 'A');
        //auto score7 = t.Score(m7);
        //ASSERT(score7, (-7.51178602234865 - t_baseline));


        // Substitution in middle mutations to test link alpha-beta
        Mutation m8(MutationType::SUBSTITUTION, 4, 'A');
        auto score8 = t.Score(m8);
        ASSERT(score8, (-5.23558996122357 - t_baseline));

        // Insertion in middle to test link alpha-beta
        Mutation m9(MutationType::INSERTION, 4, 'G');
        auto score9 = t.Score(m9);
        ASSERT(score9, (-6.71553495654471 - t_baseline));
        }
        std::cout << "Finished!" << i << std::endl;
        return 0;
    }

    int MatrixTester::TestMultiReadScorer() {
        BandingOptions bo(18);
        double fast_score_threshold = -12.5;


        std::string temp = "AGAGAGATAGCTACTAGTCCTCAGCAAGCTTGATCACACTATATGCGAGCGCGATAGATCGCTCTGCATCGTCACGATGTGTGTATATGACTGAGAGTCATACTATCTCTGCTACGCTCGACGTAGCGCTCATGTCGTCTAGTATGCGTGAGACGACGTAGCAGATACATGAGTGACAGACTCAGCAGTGCGCACAGTCACAGCTGTAGCATCGTACTCTACT";
        SNR snr(15.4944181442261,8.78859329223633,13.521107673645,14.9640893936157);
        ScorerType scorer = createScorer(temp, snr);
        Read r1("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/19492_19674 RQ=0.848","GAGATACGATGCTACAGGGCTGTGACTGTGCGCACTGGCATGAGATCTGTCACTCCTAATGGTGTATCTTGCTACGCTTCGTACTCTCAGCGCAATACTAGGAACGACAATTGAGCGCGTTACGTCGAGCGTAGCAAGAGGATAGTATGACTCTCAGTCAATAACGACGACAGTTCGGAACG");
        MappedRead mr1(r1, StrandEnum::REVERSE_STRAND, 68, 218, false, false );
        auto result1 = scorer.AddRead(mr1, 1.0);
        Read r2("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/18859_19111 RQ=0.848","GAAGTACGTATTGCTACAGCTAGATGGACTGTGCGCACTGCTGAGTCGTGTCACTCCATGTATCTGCTAACCGCTCGTTCTCACGCATGGACTAGACGACATGAGCCGCTAACGTCGAGCGTCAGCGAGAGATAGTATGACTCTCAATGTCATATGACACACATCGGTGACGAGGTGCATGAGCGATCCTATCGCGCTCAGCATATAGTGGTGGATCAAGCCTTGCCGTGAGGACTAGTAGGCTTCTCTCTC");
        MappedRead mr2(r2, StrandEnum::REVERSE_STRAND, 0, 218, false, true );
        auto result2 = scorer.AddRead(mr2, 1.0);
        Read r3("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/9514_9553 RQ=0.848","TAGAGTAGATGTTAGTCAGCTGTGACTGTGCGCACTGCT");
        MappedRead mr3(r3, StrandEnum::FORWARD_STRAND, 169, 205, false, false );
        auto result3 = scorer.AddRead(mr3, 1.0);
        Read r4("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/16323_16580 RQ=0.848","AGTAGAAGTACTGATGCTACAGCTGCTGACTGTGCGCACTGCTTGAGTCTGTCACTCTATGTATCTGCTACGGTCGTCTCACGCATACTAGAAACGAGCATTGAAAGCGCTACGTGGTCGTAGCGTAGCAGACGAGATAGTATGACTCTACAGTCATAGGTACACACATCGTCGACGATGCCCAGAGCGATCGTAATCGGCGCTCCGAGCATATAGATGTGATCAGCATTGCTGAGGACTAGGTAGCTTCTTCTCTC");
        MappedRead mr4(r4, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result4 = scorer.AddRead(mr4, 1.0);
        Read r5("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/15332_15587 RQ=0.848","CAGAGAGAGGAAGCGTACTAGTTCCTCATGCAAGCTTGATCCAACGATCTATATGCGCAGCGCGTATATGAGTTCGCTCTGCATCGTCCACGATTGTTGGTGTATAATATGACTGAAGAGGTCATACATATCTCCTGCCTACGCTCGACGTAGCGCTCATGTCGTCCTATATGGCGGTGAGACGACGTAGCAGGATACATGAGCTGAAGACTCAGCATGTGCGCAGCAGTCAGCAGCTGTAGCATGCGTACTTAC");
        MappedRead mr5(r5, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result5 = scorer.AddRead(mr5, 1.0);
        Read r6("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/18204_18466 RQ=0.848","AGTAGCAGTACGATGCTACAGGCTGTGACCTGGTCGCACTGCTGTAGATTCTGTCACTGCATGTTCTGGCTACGGTCGTCTCACGCAATGACTAGAGGACTGACATGAGCGCTTACGTCGAGCGTAGCAGAGATAGTATGTTAACTCTCAGTCATATACAACACATTTTCGCTGACGAGTGCAAGAGCGATGCTAATGCGCGGAGCCTCGCAAATATATGTGTTAGATCAACGCTTGCTGAGGATCTAGTAGCTTCTCTCTC");
        MappedRead mr6(r6, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result6 = scorer.AddRead(mr6, 1.0);
        Read r7("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/15692_15951 RQ=0.848","GAGTACGATGGCACAGCTGTGACTGTGCGCAATGTGCGTGTTAGTCCTGGTCAGCTCATGTATCTGCTACGGTCGGTCTCGACGCATACTAGACGACATGAATGGCGATACGTCGCGAGCGTAAAATAGAGATTAGTATGACTCGTCAGTCAATATTACAACACGCACTCGTGGACGATGCACGAGCTGGGATCTATCGCGCTCGGACATTATAGTGTGATCAATAGCTTTGACTAGGACTAGTAGCTTTTCTCATCTC");
        MappedRead mr7(r7, StrandEnum::REVERSE_STRAND, 0, 218, false, true );
        auto result7 = scorer.AddRead(mr7, 1.0);
        Read r8("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/8795_8817 RQ=0.848","AGCTGTGACTGTGCAGCACTGC");
        MappedRead mr8(r8, StrandEnum::FORWARD_STRAND, 186, 204, false, false );
        auto result8 = scorer.AddRead(mr8, 1.0);
        Read r9("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/2226_2455 RQ=0.848","AGAGAGAAAGAAGCTCCTCAGTTCCTCAGCAAGCTTGATCAACTATATGCGAGCGCGATAGATCGGCCTCTGCATCGTCACGAATGTTGTGTATATGAACTGAGAGTCATACTATCTCATGCTACGCCTCGACGTAGCGCTCATGTCGTCTCAAGTTATGGCGTGAGAGCGACTGTTTTAGCAAGATACATGAGTGACAGACTCAGCAATGTGCGGCACCCCGCTCACA");
        MappedRead mr9(r9, StrandEnum::FORWARD_STRAND, 0, 202, true, false );
        auto result9 = scorer.AddRead(mr9, 1.0);
        Read r10("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/16613_16860 RQ=0.848","AGAGAGAAGCTACTGAGTCTCAGCAAGGCTTGTCAACCTACTAATATGCGAGCGCGTGATAGATCGCTTCTGGCATCGTCAACGATGTGTGTATACTGACTGAGAGTCATACTATCTCTGAACTGACGCTCGACGTAGCGCTCATGTCGTCTAGTATGCGTGATGACGACGTAGGCAGACATACAGTGAGTGAATGAGCAGACTCAGCAGTTGCGCACAGTCACAGCGTGTAGCAATCGTACTCTAC");
        MappedRead mr10(r10, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result10 = scorer.AddRead(mr10, 1.0);
        Read r11("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/20400_20644 RQ=0.848","AGAGAAGAGAAAGCTACTAGTCCTCAGCAAGGCTTGATCACACTATATGCGAGAGCCGATAGATCGCTCTGCATCGGTCACGGATGTGTGTATATGACTGAGAGTCATACTATCTCTGGCTACGGCTCGACGTAGCGGCTCATGTCGTCGTAGTATGGCGTGGAAGAAACGACGTAGCAGATACATGATGACAGTACTCAGCAGTGCGACACAAGTCACAGCTGTAGCATCGTAAACTAGCTAC");
        MappedRead mr11(r11, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result11 = scorer.AddRead(mr11, 1.0);
        Read r12("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/6753_6994 RQ=0.848","AGTAGAGTACGAATTGCTACAGCTGTGACTGTGCGCACTGCTGAGCTCTGTCACTCATGTATCTGCTACGTCGTTCTCACGCATACTAGACGACATGAGCGCACGTCGAGCGTAGCGAGAGATAGTATGACTCTCAAGTCCTATACACACATTCGTGACGATGCCCAGAGCGATCTATATCGGGCTCGGCATATAGTGTGGATCAAAGCTTTGCTGAGGAACTAGTAAGCTTTTCTCTCTC");
        MappedRead mr12(r12, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result12 = scorer.AddRead(mr12, 1.0);
        Read r13("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/7969_8009 RQ=0.848","ATGGGCAGTGCGCACAGTTCACAGCCTGTAGCATCGTACT");
        MappedRead mr13(r13, StrandEnum::REVERSE_STRAND, 170, 204, false, false );
        auto result13 = scorer.AddRead(mr13, 1.0);
        Read r14("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/21345_21579 RQ=0.848","AGTAGAAGTTACGATGCTACAGCTGTGACTGTGCGCACTGCTGATCCTGTCACTCAATGTATCTGCTACGTCGTCTCACGCATACTAAGACGACAATGAGCGCTACGTCGAGCGTAGCAGAGAATAGTAATGACCTCTCAGGTCATATACACACATCGTGACGAATGCAGAGCGATCTATCGCGCTCGCATATAGTGTGATCAAGCTTGCTGAGGACTAGTAGCTTCTTCTCTC");
        MappedRead mr14(r14, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result14 = scorer.AddRead(mr14, 1.0);
        Read r15("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/3458_3698 RQ=0.848","AGAGAGAGAAAGCACTAGTCCTCAGCAAGCTTGATAACACTAGTATGCGAGCGCGATAAAAGAGGATTCGCTCTGCATGCGTCACGAAAATGTGTGTATATGACTGAAGAGTCAATACTATCTCTGCTAACGCTGCGACGTAAGCGCTCATTCGTCTAGTTATGCGTGAGACGACGTAGCAGATACATGAGTGCAGACTCAGCTAGTGCGCCAGTCACAGCTTGTAGCATCGTACTCTAC");
        MappedRead mr15(r15, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result15 = scorer.AddRead(mr15, 1.0);
        Read r16("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/6423_6662 RQ=0.848","AGAGGAGAGAAAGCTACTAGTCCCTGCAGCAAAGCTTGATCAGAACTATTGCGAGCGCGATAGATCGCTCGCATCGTCACGATGTGTTTGTATATGACTGAGAAGTCCATACTATGCTCTGCTACGCTCGGACGTAAGCGCTTGCATGTCCGTCTTAGTCATGAGTGAGACGAACGTAGCAAGATACATGAGTGACAGACTCAGCAGTGTGCACAGTCACAGCTGTAGCATGTACTCTA");
        MappedRead mr16(r16, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result16 = scorer.AddRead(mr16, 1.0);
        Read r17("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/17240_17485 RQ=0.848","AGAGAGAGAAAGCTACTTAGTCTCAGCAAGCTTGATCACACTTGATATGCGAGCGCGATAGAGTGCTTCTGGCAATCGTCAACGATGTGTGTATGATGACTGAGAGTCAAACTAATCTCTGCTCAACGCTTCGAGCGTAGCGCTCGCATGTCGTCTAGTATGTCGTGAGACGACGTAGCGAGATACATGAGTGACAGACTCAGCAGTGCGCGCACAGTCACAGGCTGTAGCATCGTACTTTCTAC");
        MappedRead mr17(r17, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result17 = scorer.AddRead(mr17, 1.0);
        Read r18("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/17861_18106 RQ=0.848","AGAGAGAGAAGCTACTAGTCCGGTCAGCAAGCTTGATCACACTGATAAGTCGAGGCGCGATAGATCGCTTGCCTGCGACTCGTTCACGATGTGTGTATATTGAATGAGAAGTCATACTATCTCTGCTACGGCTCGACCGATAGCGCTGCATGTCGTCTAGTATGGTGAGACGACGTAGCAGATACATGAGTGACAAGACTCAGCATGTGCGAACAGTCGCACAGCTGTAGCATCGTATCTCTACC");
        MappedRead mr18(r18, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result18 = scorer.AddRead(mr18, 1.0);
        Read r19("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/17577_17832 RQ=0.848","AAGTAGAGTACGATTGCTACAGCTGTGACTGTGCGCACTGCTGAGTAGTTCTGTCACTTGGCATGTATCTGCTAGTACAGTCGTCTCACGCATACTAGGACGAACATGGAGGCCGCTGAACGTCGAGCGTAGGCCGAGAATAGTTGACTCTCGAGTCATTTACACACATCGTGACGATGCAAAGAGCGATCTAGTCGGCGCTCGCATATATGTGTGAATGGCAGCTTGCTGAAGGATAGTAGCATTCCTCTCTCT");
        MappedRead mr19(r19, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result19 = scorer.AddRead(mr19, 1.0);
        Read r20("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/16968_17208 RQ=0.848","GTAGACGTACGAATGCATACAGTGTGACTGTGCGCCACTGCTGATCTGTCACTCATAGTATCTGCTACGGTCGTCTCACGCTGATACTAAGAGAACGACCATGAGCGCTATGCGTCGAGCGTTAGCAGAGATAGTATAGACTTCAGTCATATACACACATCGTGACGATGCAGGAAGCGATCTATCGCGCTCGCATTATGCGTGTGATCAAGCTTGCTGAGGACTAGTAGCTCGTCTCTC");
        MappedRead mr20(r20, StrandEnum::REVERSE_STRAND, 0, 221, false, true );
        auto result20 = scorer.AddRead(mr20, 1.0);
        Read r21("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/8636_8676 RQ=0.848","ATGCAGTGCGCAGCTCGTCACAGCTGTAGCATCGTACTCT");
        MappedRead mr21(r21, StrandEnum::REVERSE_STRAND, 169, 204, false, false );
        auto result21 = scorer.AddRead(mr21, 1.0);
        Read r22("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/1324_1576 RQ=0.848","AGTAGAGTACCGACTGCTACAGCTGTGCATGTGCGGCCTGTGAGCTCTGTCCACTCCATATGTATCTGCTTAACGTCGTCTCACCGCATACCCTAGACCGACATGAGCGCGCTACGGTCGAGCGTAGCACCGACGATATCCGTATGAACTCTCAGTCATTACCACACCACTCGTGACGATTGCCAGAGCGATCTATCGCGCTCGCAATATAGTGGTGATCAAGCTTGCTGAGACTTAGTAGCTTCTCTCTGC");
        MappedRead mr22(r22, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result22 = scorer.AddRead(mr22, 1.0);
        Read r23("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/6157_6393 RQ=0.848","ATAGGAGTAGGCGATGCTATCAGCTGTGACTTGTGCGCACTGCTGAGTCCTGTCACTCATGTATCTGCTACGTCGTCTGCACGTCATACTAGACGACATGAGCGCTACGTCGAGCCGTAAGCAGAGATAGTATGACTCTCAGTCAATATTACACACATCGGACGAGCAGAGCGAATCTATTCGCGCTCGCATATAGTGGTGATCAAGCTTGCTGGGATAGTAGCTTTTTCTGTCTC");
        MappedRead mr23(r23, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result23 = scorer.AddRead(mr23, 1.0);
        Read r24("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/15983_16224 RQ=0.848","AGAGAGAGAGAGCGTAGCTAGTCCTGCAGCAAAGCTGATCACACTAATAATGCGAGCGCGATAGTCGCTCGATGCACTGCGTCACGATGTGTGTATATGACCTGAAGCAGTCATACTATCTCTGCTACGCTCGACGTAGCGCTCATGGTCGTCTAGTATGCGTGAGAACGACGTAGCAGATACATGAAGTGACAGACTCAGCAGTGCGCACAGTCACAGGCCTGTAGCAATCGTACTCTAC");
        MappedRead mr24(r24, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result24 = scorer.AddRead(mr24, 1.0);
        Read r25("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/1951_2192 RQ=0.848","AGTAGAGTACGAGATGCTACAGCTGTGACTGTGCCGCACTGCTCGATGTCCTGTCAAATCATGTATCCTGCTACATTCGTCGTCCACGCATGACTTAAGATCGACATGCAGCGCTACGTCGAGCGCTAGAAGATAGTATGACCTCTCAGTCATATACAACAACATCGTGACGATGCTACGAGCGATCTACTGCGCTTCGCATCATACGTGTCGATCAAGCTTTGACTAGTAGCTCTCTCTC");
        MappedRead mr25(r25, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result25 = scorer.AddRead(mr25, 1.0);
        Read r26("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/12671_12707 RQ=0.848","ACAGTGCGCATACAGTCACAGCTGTAGCATGCCGTG");
        MappedRead mr26(r26, StrandEnum::REVERSE_STRAND, 169, 204, false, false );
        auto result26 = scorer.AddRead(mr26, 1.0);
        Read r27("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/20743_20984 RQ=0.848","AGTAAGAGTACGATGCATAGGCTTGACTGTGCGCACTGTGCTGAGTCTGTCACATAGTTTCTGCTACGCTGTCTCACGGCATAACTAGTACGAGCATGAGCGCCTACGTCGAGCGTAGCAGAGAAGTAATGACTCTCAGTCATAACTACACGACATCGTGACGATGCCAGCAGCGAATTATCGCGCTTCGGGCATAGTAGTGTTGATCAAAGCTTGCTGAGGACTAGTAGTCTTCTCTCTC");
        MappedRead mr27(r27, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result27 = scorer.AddRead(mr27, 1.0);
        Read r28("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/3802_4037 RQ=0.848","AGAGAGTACGATGCTACAAGCTGTGACTGTGGCGCACTGCTGAGATCTGTCACTCATCGTATCTGCTACGTCGTCTCACGCATAACTAGACACATGAGCGTCTAGCGTCGAGGGCGTAGCAGAGATAGTATGACTCTGCAGTCATATCAGCACATCGTGAGCGATGCAGAGCGCCTCTATCGGCGCTCGCATAATAGTGTGATCAAGCTTGCTGGAGGACTAGTAGCTTCTTCTC");
        MappedRead mr28(r28, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result28 = scorer.AddRead(mr28, 1.0);
        Read r29("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/10553_10784 RQ=0.848","AGAGAGAGAAGCTACTAGTCCTCAGCAGCTTGATCAACACTATATGCGAGCGCGATAGATCGCTCTGCATCGTCAGATGTGTGTTATATGACTGAGAGTCATACTATCTCTGCTACGCCTCGAGTAGGCGCCTCATGTCGTCTAGTAATGCGTGAGACGAACGTAAGCACAGATACATGAGTGACAGACTCAGCAGTGCGCACCAGTCACAGCTGTAGCATCGTACTCTAC");
        MappedRead mr29(r29, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result29 = scorer.AddRead(mr29, 1.0);
        Read r30("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/18502_18748 RQ=0.848","AGAGAGAGCTACTAGTCCTCAAGCCGTCTTGAGTCAACACTCATGCCGATGCGATGCGCGATAAGATCGCATCGCATTTTCGTCACGGATGTGTGTTATATGACTGAGAGTCATACTTCTCGTGGCTAGCTCGACGGTAGCGCTGCATGTCCGTCTAGTATTGCGTGAGAAAGACGTAAGCCAGGATACAGTGAGTGACAGACTCAGGGCAGCTGCGCACAGTCACAGCTGTATGCATCGGTGGAT");
        MappedRead mr30(r30, StrandEnum::FORWARD_STRAND, 0, 218, true, false );
        auto result30 = scorer.AddRead(mr30, 1.0);
        Read r31("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/20131_20370 RQ=0.848","AGTAAACAGATGTACAGCCTTCGCTGTGACTGTGGCACTGTGAGTCTGTCAACTCATGTATCTGCTACGTCGTCTGCACGCATACCTAGAACGACATTGACAGCGGCTACGTCGACGTAGCAGAGAATAGGTATGACTCTCAGGTCATATACCAGCATCGTGACGATGCAGAGCGATCTATACGGCGTGCATATAGTGTGATCAAGCTTGCTGAGAGACTAGCTAGATTCTCTCTAAAT");
        MappedRead mr31(r31, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result31 = scorer.AddRead(mr31, 1.0);
        Read r32("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/4654_4882 RQ=0.848","AGAGAGAGAAGCTTACTAGTCCTCAGCAAAGCCTTTGTCACAACTATATTGCGACGCGATAGATCGCTCTGCATCGTGCACGATGGTGTGTATATGACTGAGAGTCATACTATCTTGCTACGCTCGACGTAGCGCTCATGTCGTCTAGTAGGTGAGACGACGTTAAGCAGATACATGAGTGACAGACTCAGCAGTGCGCACAGTCACAGCTGTACATTCGTACTCTAC");
        MappedRead mr32(r32, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result32 = scorer.AddRead(mr32, 1.0);
        Read r33("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/5573_5804 RQ=0.848","AGTAGAGTACGATGCCTACAGCTGTGACTGTGCGCACTGCTGAGTCTGTCTACTCATGTATCTGCTACGTCGTCTCAACGCATACTAGAGACATGAGGCGCTACGTCGAGCGTAGCAGAGATAGTAATGACTCCTGCAGTCATATACACCAACATCGTTACGATGCCAGAGCGATTATCGGCGCTCGCATATAGTGTGTCAGCTTGCTTGAGGACTAGTAGCTTCTCTCTC");
        MappedRead mr33(r33, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result33 = scorer.AddRead(mr33, 1.0);
        Read r34("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/5243_5464 RQ=0.848","AGAGAGAGAAGCTACTAAGTCTCAGCAAGCTTGATGCACACTATATGCGAGCGCGATAGATCGTCTGCATCGTCAGATGTGTGTATAATGACTGAGAAGTCATACTATCTCTGCTACGCTCGACGTTAGCGCTCATTGTCGTCTAGTATGCGTGAACGACGTAGGCAGATACATGAGTGACAGACTCAGCAGTGCGCAAGTCACAGCTGTAGCATCGTACT");
        MappedRead mr34(r34, StrandEnum::FORWARD_STRAND, 0, 218, true, false );
        auto result34 = scorer.AddRead(mr34, 1.0);
        Read r35("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/4066_4296 RQ=0.848","AGAGAGAAGAAGCTACTAGTCCTCAGCAAGCTTGATCACACTATATGCGAGCGCGATAGATCGCTCTGGCATCGTCACGATGTGTGTATAATGAACTGAGAGTTCATATACTCTGCTAACGCTGCGACGTAGCGCTCATGTCGTCCTCAGTATCCGTGAAGACGACGTGCAGATACATGAGTGACAGACTCAGCATGCGCACAGTCACAGCTGTAGCATCGGTACTCTAC");
        MappedRead mr35(r35, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result35 = scorer.AddRead(mr35, 1.0);
        Read r36("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/10882_11119 RQ=0.848","AAGTAGAGTATGCGATGCTACAGCTGTGACTGTGCGCACTGCTGAGTCTGTCACTCATGTTCTGCTACGTCCGTCTCACGCATACTAAGCGAATGAGCGCTACGTCGACGTAGCAGAGATAGTAATGACTCTCAGTCAATTACACACATCCGTGACGATGGCAGAGCGATCTATCGCGCTGCATATAGTGTGAATCCAAGCTTTGCTGGAGTGACTAGTGATAGCTATATTTCTCTC");
        MappedRead mr36(r36, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result36 = scorer.AddRead(mr36, 1.0);
        Read r37("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/4395_4623 RQ=0.848","AGTAGAGTACGATGCTACAGCTGGTGACTGTGGCGCACTGCTGAGTCCCTGTCACTCATGTATCTGCTACGGTCGTCTCCACGCATAGACGACATGAGCGCTACGGTCGAAGCGTAGCAGAGATAGTATGACTCTCAGTCATATACACACATCGTGACGATGCAAGAGCGATCCTATTCGCGCTCGCATATAGTGTGATCAGCTTGCTGAGGACTATAGCTCTCTCTC");
        MappedRead mr37(r37, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result37 = scorer.AddRead(mr37, 1.0);
        Read r38("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/1608_1846 RQ=0.848","AGAGAGAAGCTACCTAGTCCTCAGCAAGCTTTGATGCAGCAACTATATGCGAGCGCGAATAGATCGCTCTGCATTCGTCACGCCTGTGTGTATTGACTGAGAAAGTCATACTATCTGCTGCTACGGCTCGACGTAGGCGCTCATGTCGTCGCTAGTATGCGTGAGACGACGTAAGAGATACATGAGTGACAGACTCAGGCAGTACGCGCACAGTCACAGCTGTAGCATCGTACTCTAC");
        MappedRead mr38(r38, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result38 = scorer.AddRead(mr38, 1.0);
        Read r39("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/4978_5211 RQ=0.848","AGTAGAAGTACGATGCTTACAGCTGTGACTGGGCGCAACTGCTGAGATCTGTCACTCCATGTATCTGCTACGTCGTTCACGCATACTAACGACATGAGCGCTACGTCGAGCGTGTAGCAGGAGATAGTAAATGCACTCTCAGTCATATACCACATCGTGAACGATGCAGAGCGATCTATCTGGCTCGCATATAGTGTGACAAAGCCTTGCTGAGGACTAGTAGCTTCTCTCTC");
        MappedRead mr39(r39, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result39 = scorer.AddRead(mr39, 1.0);
        Read r40("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/19787_20017 RQ=0.848","AGAGAGAGAGCTACTGTCCTCAGCAAGCTTGATCACACTATATGGCGAGCGCGCGATAGAATCGCTCTGCATCGTCCAGATTGTGTGTAGTTATGACTGAGAGTCAGTACTATCTCTGCTCGCTTCGACGTGCGGCTCATGTCGTCTAGTAAATGGCGGTGAGACTGACGTAAAGCAGGATAACATGAGTTGACAAGACCAGCAGTGCCGCAAGTCAGCAGCTGTAGCAT");
        MappedRead mr40(r40, StrandEnum::FORWARD_STRAND, 0, 212, true, false );
        auto result40 = scorer.AddRead(mr40, 1.0);
        Read r41("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/11156_11400 RQ=0.848","AGAGCGTAGATAGCTACTAGTCTCAGCAAGCTTTGTATGGCACAGCTGATATGCGAAGCGGCGATAGTATATATCTCACGATGTGTGTATAAGTGACGTGAGGAGCTGCTCACATACTATCTCTGCTACGCTCGACGCTAGGCGCTCACTGTCGTCTAGTATGCGTTGAAAGAACGACGTAGGCAGATACATGATGACAGACTCAGCAGTGCGCACAGTCACAGCTGTAGCATCGTTACTCTAC");
        MappedRead mr41(r41, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result41 = scorer.AddRead(mr41, 1.0);
        Read r42("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/5838_6061 RQ=0.848","AGAGAGAAGCTACTAGTCCTTCAGCAAGCTTGATACACTATATGCGAGCGCGATAGATCGCTCTGCATCGTCACGATGTGTGTATATGACTGAGAGTCATACTATCTCTGCTACGCTGACGTAGGCTCAATGTCGTCTAGTATTGCGTGAGACGACGTAGCAGATACATGAGTGACAGACTCAGTCAGTGCGCACAGTCACAGCTGTCGCATCGTACTCTAGC");
        MappedRead mr42(r42, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result42 = scorer.AddRead(mr42, 1.0);
        Read r43("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/21019_21250 RQ=0.848","AGAGAGAGAAGCTACTAGTGCCTCAGCAAGCTTGATCAGCACATTGCGAGCGCGGATAGATGCGCGTCTCATCGTCACGATGGCTGTGTATATCTACTGAAGAGTCCATACTATCCTCTGCTAACGCTCGCGTAGCGCTCAGTCGTCTAGTATGCGTGAGACGAAACGTAGCAGATACATGAGTGACAGACTCAGCTGCGCAACAGTCCACAGCTGTAGCATCGACTCTAC");
        MappedRead mr43(r43, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result43 = scorer.AddRead(mr43, 1.0);
        Read r44("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/2572_2817 RQ=0.848","AGTAGAGTACGATGCTACAGCTGTGACTGTCCGCGCACTGCTGACGTCTGTCACTCAATGTATCTGCCTACGGTCGTCTCATCGCATACTAACGACATGAGCCGCCTACGAGTCGAGCGTACGCTAGAGATAGTATGCTGCTCAGTCATATACACACATCGTCGACGATGCCCAGAGCGATTCTAATCGCGCCATCGCACTATAGTGTGATCAAGCTTGCTGAGGACTAGTAGGCTTTCTCTCTC");
        MappedRead mr44(r44, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result44 = scorer.AddRead(mr44, 1.0);
        Read r45("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/19143_19381 RQ=0.848","AGAGAGAGCTACTAGTATCTCAGAAGCTTGATCACAACTATATGCGAGACGCGATGATCGCTCTGCATTCGTCCACGATGGTGTGTATATGGACGTGAGAGTCATCACTATTCTCTGCTACGGCTCGGACGTAGCGCTCAAATGTCGTCGAGTATGCGTGAGAACGACGTTAGCAGATACATGAGTGACAGAGCTCAGGCAGTGCGCACAGTCACAGCTGTAAGCATCGTACTCTGAC");
        MappedRead mr45(r45, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result45 = scorer.AddRead(mr45, 1.0);
        Read r46("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/11497_11734 RQ=0.848","AGTAGAGTACGATGCTAAGCTGTGACTGTGCGCAACTGCGAGTCTGTCAACTCATGTATCTGCTAACGTCGTCTCACGCATACTAGACGACATGAGCCGCTACGTCGAGCGTAGCAGAGATAGGGTATGACTCGTGCAGTCATATACACATCGATGACGAATTGGCAGAGGCGATCGTACGGTCGGCTCACGCATATATGAAATCATGCTTGCTGGAAGGACTAGTAGCACTTTCTC");
        MappedRead mr46(r46, StrandEnum::REVERSE_STRAND, 0, 222, false, true );
        auto result46 = scorer.AddRead(mr46, 1.0);
        Read r47("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/21610_21833 RQ=0.848","AGAGAGGAAGCCTACTATCCTCAGGCAAGCTTGATCACAACTATATGCGAGCGCGATAGATCGCTTGCATGTCGATGTGTGTATATGACTGAGAGTCATACATCTCTTGCTACCTCGACGTGCGGCTCGATGTCGTCTAGTATGGCGTAGACGACGTAGCAGAATACATGAGTGACAACTGCAGCAGTGCGCACGTGCCACAGCTGTAGCATCGTAACTCTAC");
        MappedRead mr47(r47, StrandEnum::FORWARD_STRAND, 0, 222, true, false );
        auto result47 = scorer.AddRead(mr47, 1.0);
        Read r48("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/2853_3080 RQ=0.848","AGCAGAGAGAAAGCTACCTAGTCCTGCAACAAGCTCTGATCACACTATATCGCCCAGCGCGATAGATCGCTCTGCTATCGTCCACGATGTGTTATACTGACTTGAGAGTCCATACTATCTCTGCTCCGCTCGAGCGTAGCGCTCATGTCGTCTAGTATGCGTAGACGACGTAGGCAGATAACATGAGTGACAGACTCAGCAGTGTCGCCACAGTCCAGCCAGCTGTG");
        MappedRead mr48(r48, StrandEnum::FORWARD_STRAND, 0, 209, true, false );
        auto result48 = scorer.AddRead(mr48, 1.0);
        Read r49("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/3207_3426 RQ=0.848","CACGCTCGCTCGCACTCGCTCGCGCACTGCTGAGTCTGTCACTCATGTAATCTGCTACGTCGTCTCACGCATACTAGACGACATGATGCGCTACGTCGAAGCGTAGCAGAGATAGTATGACTCTCAGTTCATATACACACATCGTGACGATGGCAGAGCGATCTATCGCGCTCGCATATAGTGTGATCAAGCTTGCTGAGGACTAGTAGCTTCTCTCTC");
        MappedRead mr49(r49, StrandEnum::REVERSE_STRAND, 0, 205, false, true );
        auto result49 = scorer.AddRead(mr49, 1.0);
        Read r50("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/15022_15119 RQ=0.848","ATATGATTGATGCGCACATTAGTAGTCTGTCACTCAGTTAGTGATCTGCGCTACGGGTTTTCGTCTCACGCTCGATATATATCGCTGAGAAGTGACG");
        MappedRead mr50(r50, StrandEnum::REVERSE_STRAND, 112, 206, false, false );
        auto result50 = scorer.AddRead(mr50, 1.0);
        Read r51("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/12209_12224 RQ=0.848","GCCACTGACTGGAGA");
        MappedRead mr51(r51, StrandEnum::FORWARD_STRAND, 189, 203, false, false );
        auto result51 = scorer.AddRead(mr51, 1.0);
        Read r52("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/7070_7301 RQ=0.848","TATATTCGAGAAGGTTCATGCGATGCGTGCGATAGATCGCCTTCTGCATCGTCCAAGATGTTGTGTATATGACTGAGAAGTCAATACTATCTTCTGCTACGCTCGACGCTAGCAGCGTCAATGTCGTCCCTAGTATAGTGCGTGGAAGACGACGTAGCACGATACATGAGGTGAACAGACTCGTTAAAAGTGCGCATTAAGGGTCACACAGCTGTAGCCATCGTACTCTAC");
        MappedRead mr52(r52, StrandEnum::FORWARD_STRAND, 11, 222, false, false );
        auto result52 = scorer.AddRead(mr52, 1.0);
        Read r53("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/10405_10514 RQ=0.848","AACGCACCCAGTCGGTGACGAGTGGCAGAGCGATCTATACGCGCTGGTATATTAGTAAGGTGATCAGAGGCTTGCTAGAGGGACTAGTTTAGCCTTTCTTCTCTCGATC");
        MappedRead mr53(r53, StrandEnum::REVERSE_STRAND, 0, 83, false, true );
        auto result53 = scorer.AddRead(mr53, 1.0);
        Read r54("m141008_060349_42194_c100704972550000001823137703241586_s1_p0/5/14719_14894 RQ=0.848","TAGTTGACATGGAGGAGTCACACATATTTGATCTCTTGCTACGCTATATTATAATGCGCGCTCCACTCGTGCGTCCGCTCTAGTAGTGCGTTGTGGACCGCGATCGTAGCAGATACATGAGATGACAGATCTTCAGCAGGTGCGCGCAAGTCACAGCTGTAGCATCGTACTCTAC");
        MappedRead mr54(r54, StrandEnum::FORWARD_STRAND, 83, 222, false, false );
        auto result54 = scorer.AddRead(mr54, 1.0);

        Mutation m(MutationType::INSERTION, 202, 'C');
        auto ress = scorer.Score(m);

        std::cout << ress << std::endl;
        return 0;
    }
}

int main() {
    std::cout << "Starting New!!!" << std::endl;
    ConsensusCore::MatrixTester mt;
    for (int i=0; i< 3; i++) {
        mt.TestMutationScorer();
    }
    return 0;
    //return mt.TestMutationScorer() || mt.TestMultiReadScorer();
}
